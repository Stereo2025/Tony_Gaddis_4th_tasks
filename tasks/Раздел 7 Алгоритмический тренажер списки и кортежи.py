# - 1 - Напишите инструкцию, которая создает список с приведенными далее строковыми значениями:
#       'Эйнштейн', 'Ньютон', 'Коперник' и 'Кеплер'.
n = ['Эйнштейн', 'Ньютон', 'Коперник', 'Кеплер']
print(n)

# - 2 - Допустим, что переменная names ссылается на список. Напишите цикл for, который выводит
#       каждый элемент списка.
n = ['Эйнштейн', 'Ньютон', 'Коперник', 'Кеплер']
for i in n:
    print(i)

# - 3 - Допустим, что список numЬersl имеет 100 элементов, а numЬers2 является пустым списком.
#       Напишите код, который копирует значения из списка numЬersl в список numЬers2.
numbers1 = [2,5,7,8,5,6,7,4,3,5,6,7,8,2,4,5,6,7,8,9]
numbers2 = numbers1
print(numbers2)

# - 4 - Напишите функцию, которая принимает список в качестве аргумента (допустим, что список
#       содержит целые числа) и возвращает сумму значений в списке.

def main():
    lis = [1, 2, 3, 4, 5]
    print('Summ = ', get_summ(lis))
def get_summ(num):
    t = 0
    for i in num:
        t += i
    return t
main()


# - 5 - Допустим, что переменная names ссылается на список строковых значений. Напишите программный код, который
#       определяет, находится ли имя 'Руби' в списке names. Если это так, то выведите сообщение 'Привет, Руби! ' .
#       В противном случае выведите сообщение' Руби отсутствует ' .

names = ['Руби', 'Вася']
print('Руби здесь есть') if 'Руби' in names else print('Руби здесь нет')

# - 6 - Напишите инструкцию, которая создает двумерный список с 5 строками и 3 столбцами.
#       Затем напишите вложенные циклы, которые получают от пользователя целочисленное значение для каждого элемента в
#       списке.

R = 5
S = 3
spisok = [[0, 0, 0],
          [0, 0, 0],
          [0, 0, 0],
          [0, 0, 0],
          [0, 0, 0]]
def main ():
    for i in range(R):
        for t in range(S):
            spisok[i][t] = int(input(': '))

    print(spisok)
main()






























