# - 1 - Напишите программу, которая запрашивает у пользователя число в диапазоне от 1 до 7. Эта программа должна
#       показать соответствующий день недели, где 1 - понедельник, 2 - вторник, 3 - среда, 4 - четверг, 5 - пятница,
#       6 - суббота и 7 - воскресенье. Программа должна вывести сообщение об ошибке, если пользователь
#       вводит номер, который находится вне диапазона от 1 до 7.


# 1.Создать словарь ключ: значение по дням недели
# 2.Написать соответствующие условия которые подходят введенному значению
# 3.Вывести ошибку если значение вышло за пределы границ.

# Решение 1:
# days = {'1': 'Понедельник', '2': 'Вторник', '3': 'Среда', '4': 'Четверг', '5': 'Пятница', '6': 'Суббота',
#         '7': 'Воскресенье'}
#
# key = input('Enter num: ')
# print(days[key] if key in days else 'Такого дня не существует')

# Решение 2:
# number = int(input('Введите число от 1 до 7: '))
# if number == 1: print('Понедельник')
# if number == 2: print('Вторник')
# if number == 3: print('Среда')
# if number == 4: print('Четверг')
# if number == 5: print('Пятницу')
# if number == 6: print('Суббота')
# if number == 7: print('Воскресенье')
# else: print('Вы ввели неверное число, попробуйте ещё раз.')


# - 2 - Площадь прямоугольника- это произведение его длины на его ширину. Напишите программу, которая запрашивает
#       длину и ширину двух прямоугольников. Программа должна выводить пользователю сообщение о том, площадь какого
#       прямоугольника больше, либо сообщать, что они одинаковы.


# 1. Создать функцию, определить параметры функции
# 2. Написать условия >, < или == и вернуть ответ по условию задачи
# 3. Передать значения аргументов в параметры функции
# 4. Задать аргументы в функцию и ввести данные с клавиатуры "числами"

# Решение 1:
# def main(weight_1, hight_1, weight_2, hight_2):
#
#     if weight_1 + hight_1 > weight_2 + hight_2:
#         return 'Первый прямоугольник больше воторого'
#     elif hight_1 + weight_1 < hight_2 + weight_2:
#         return 'Второй прямоугольник больше первого'
#     else:
#         return ' Прямоугольники равны '
#
#
# print(main(hight_1=float(input()), weight_1=float(input()),
#            hight_2=float(input()), weight_2=float(input())))


# - 3 - Напишите программу, которая просит пользователя ввести возраст человека. Программа должна определить,
#       к какой категории этот человек принадлежит: младенец, ребенок, подросток или взрослый, и вывести
#       соответствующее сообщение. Ниже приведены возрастные рекомендации:
#   • если возраст 1 год или меньше, то он или она - младенец;
#   • если возраст старше 1 года, но моложе 13 лет, то он или она- ребенок;
#   • если возраст не менее 13 лет, но моложе 20 лет, то он или она - подросток;
#   • если возраст более 20 лет, то он или она- взрослый.

# 1. Создать функцию, задать параметр
# 2. Написать условия в соответствии с задачей
# 3. Передать аргумент в параметр функции
# 4. Вывести данные в соответствии с задачей

# Решение 1:

# def main(age):
#
#     if age < 1:
#         return 'Младенец'
#     elif age > 1 and age < 13:
#         return 'Ребенок'
#     elif age > 13 and age < 20:
#         return 'Подросток'
#     else:
#         return 'Взрослый'
#
#
# print(main(age=int(input('Enter age: '))))

# Решение 2:
# age = float(input('Введите ваш возраст: '))
# if age < 1:
#     print('Младенец')
# elif 1 <= age <= 13:
#     print('Ребенок')
# elif 13 < age < 20:
#     print('Подросток')
# elif age >= 20:
#     print('Взрослый')

# - 4 - Напишите программу, которая предлагает пользователю ввести число в диапазоне от 1 до 10. Программа должна
#       показать для этого числа римскую цифру. Если число находится вне диапазона 1--1О, то программа должна
#       вывести сообщение об ошибке. В табл. 3.8 приведены римские цифры для чисел от 1 до 10.
#   3.8 - ( 1 = I ); ( 2 = II ); ( 3 = III ); ( 4 = VI ); ( 5 = V ); ( 6 = VI ); ( 7 = VII ); ( 8 = VIII );
#         ( 9 = IX ); ( 10 = X ).

# Создать словарь согласно условию задачи, ключ: значение
# Определить пользовательский ввод
# Если введенное значение находится в словаре вывети значение ключа, если нет - ошибку.

# Решение 1:
# numbers = {'1': 'I', '2': 'II', '3': 'III', '4': 'VI', '5': 'V',
#            '6': 'VI', '7': 'VII', '8': 'VIII', '9': 'XI', '10': 'X'}
#
# s = input('Enter num: ')
# print(numbers[s] if s in numbers else 'Число вне диапазаона !')


# Решение 2:
# number = int(input('Введите число от 1 до 10: '))
# if number == 1:
#    print(number, "= I")
# elif number == 2:
#    print(number, '= II')
# elif number == 3:
#    print(number, '= III')
# elif number == 4:
#    print(number, '= IV')
# elif number == 5:
#    print(number, '= V')
# elif number == 6:
#    print(number, '= VI')
# elif number == 7:
#    print(number, '= VII')
# elif number == 8:
#    print(number, '= VII')
# elif number == 9:
#    print(number, '= IX')
# elif number == 10:
#    print(number, '= X')
# else:
#    print('Вы ввели число вне диапазона, попробуйте ещё разю')


# - 5 - Ученые измеряют массу физического тела в килограммах и вес в ньютонах. Если известна величина массы тела
#       в килограммах, то при помощи приведенной ниже формулы можно рассчитать вес в ньютонах:
#                                               вес = масса * 9,8.
#       Напишите программу, которая просит пользователя ввести массу тела и затем вычисляет его вес. Если вес тела
#       больше 500 Н (ньютонов), то вывести сообщение, говорящее о том, что тело слишком тяжелое. Если вес тела
#       меньше 100 Н, то показать сообщение, что оно слишком легкое.


# Создать функцию, задать параметры.
# Написать условия согласно задачи
# Обозначить пользовательский ввод целочисленных данных через инпут, передать аргументы в параметр.

# Решение 1
# def weight(mass, num):
#
#     if mass * num >= 500:
#         return 'Тело слишком тяжелое'
#     elif mass * num <= 100:
#         return 'Тело слишком легкое'
#     else:
#         print('Вес находится в диапазоне от 100 до 500 Ньютонов')
#
#
# weight(mass=int(input('Введите массу тела: ')), num=9.8)

# Решение 2 :
# mass = float(input('Введите массу тела: '))
# weight1 = 500
# weight2 = 100
# weight = mass * 9.8
# if weight >= weight1:
#    print('Тело слишком тяжелое')
# elif weight <= weight2:
#    print('Тело слишком легкое')
# else:
#    print('Вес находится в диапазоне от 100 до 500 Ньютонов')

# - 6 - Дата 1О июня 1960 года является особенной, потому что если ее записать в приведенном ниже формате,
#       то произведение дня и месяца равняется году:
#       10.06.60
#       Разработайте программу, которая просит пользователя ввести месяц (в числовой форме), день и двузначный год.
#       Затем программа должна определить, равняется ли произведение дня и месяца году. Если это так, то она должна
#       вывести сообщение, говорящее, что введенная дата является волшебной. В противном случае она должна вывести
#       сообщение, что дата не является волшебной.

# Создать функцию, обозначить параметры
# Опеределить условия согласно задачи
# Определить пользовательский ввод, вернуть значение функции

# Решение 1:
# def magik_data(month, day, year):
#
#     return 'Дата волшебная !' if month * day == year else 'Дата не волшебная !'
#
#
# print(magik_data(month=int(input('Enter month: ')), day=int(input('Enter day: ')), year=int(input('Enter year: '))))

# Решение 2:
# month = int(input('Введите месяц в числовой форме: '))
# day = int(input('Введите день в числовой форме: '))
# year = int(input('Введите год в формате двух последних цифр: '))
# if month * day == year:
#    print('Введенная вами дата является волшебной !')
# else:
#    print('Дата не является волшебной.')

# - 7 - Красный, синий и желтый называются основными цветами, потому что их нельзя получить путем смешения других
#       цветов. При смешивании двух основных цветов получается вторичный цвет:
#   • если смешать красный и синий, то получится фиолетовый;
#   • если смешать красный и желтый, то получится оранжевый;
#   • если смешать синий и желтый, то получится зеленый.
#       Разработайте программу, которая предлагает пользователю ввести названия двух основных цветов для смешивания.
#       Если пользователь вводит что-нибудь помимо названий "красный", "синий" или "желтый", то программа должна
#       вывести сообщение об ошибке. В противном случае программа должна вывести название вторичного цвета, который
#       получится в результате.

# Создать функцию, задать параметры.
# Написать условия согласно задаче.
# Обозначить пользовательский ввод, передать аргументы в параметр, вернуть значения согласно задаче.

# Решение 1:
# def main(color_1, color_2):
#
#     if color_1 == 'красный' and color_2 == 'синий':
#         return 'фиолетовый'
#     elif color_1 == 'красный' and color_2 == 'желтый':
#         return 'оранжевый'
#     elif color_1 == 'синий' and color_2 == 'желтый':
#         return 'зеленый'
#     else:
#         return 'ошибка цвета'
#
#
# print(main(color_1=input('Enter first color: '), color_2=input('Enter second color: ')))

# Решение 2:
# color_1 = input('Введите первый основной цвет: ')
# color_2 = input('Введите второй основной цвет: ')
# violet = 'красный + синий'
# orange = 'красный + желтый'
# green = 'желтый + синий'
# red = 'красный'
# blue = 'синий'
# yellow = 'желтый'
# if color_1 == red and color_2 == blue:
#     print('Получился фиолетовый')
# elif color_1 == red and color_2 == yellow:
#     print('Получился оранжевый')
# elif color_1 == yellow and color_2 == blue:
#     print('Получился зеленый')
# else:
#     print('Вы ввели неверный цвет')

# - 8 - Допустим, что сосиски упакованы в пакеты по 10 штук, а булочки - в пакеты по 8 штук. Напишите программу,
#       которая вычисляет количество упаковок с сосисками и количество упаковок с булочками, необходимых для
#       пикника с минимальными остатками. Программа должна запросить у пользователя количество участников пикника
#       и количество хот-догов, которые будут предложены каждому участнику. Программа должна показать приведенные
#       ниже подробности:
#           • минимально необходимое количество упаковок с сосисками;
#           • минимально необходимое количество упаковок с булочками;
#           • количество оставшихся сосисок;
#           • количество оставшихся булочек.

# Решение 2:

# people = int(input('Колличество людей на пикнике: '))
# hot_dogs = int(input('Колличество хотдогов для каждого человека: '))
# count_dogs = people * hot_dogs
# min_sos = (count_dogs + 9) // 10
# extra_sos = min_sos * 10 - count_dogs
# min_bull = (count_dogs + 7) // 8
# extra_bull = min_bull * 8 - count_dogs
# print( 'Минимальное кол-во упаковок с сосисками:', min_sos,
#       '\nКол-во оставшихся сосисок: ', extra_sos,
#       '\nМинимальное кол-во упаковок с булками: ', min_bull,
#       '\nКол-во оставшихся булок: ', extra_bull)

# - 9 - На колесе рулетки карманы пронумерованы от О до 36. Ниже приведены цвета карманов:
#   • карман О - зеленый;
#   • для карманов с 1 по 1О карманы с нечетным номером имеют красный цвет,
#     карманы с четным номером - черный;
#   • для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет,
#     карманы с четным номером - красный;
#   • для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет,
#     карманы с четным номером - черный;
#   • для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет,
#     карманы с четным номером - красный.
#       Напишите программу, которая просит пользователя ввести номер кармана и показывает,
#       является ли этот карман зеленым, красным или черным. Программа должна вывести
#       сообщение об ошибке, если пользователь вводит число, которое лежит вне диапазона
#       ОТ 0 ДО 36.

# Определить пользовательский целочисленный ввод через инпут
# Создать два спика с четными и нечетными числами
# Написать условия согласно задаче

# Решение 1:

# number = int(input('Введите число от 0 до 36: '))
# sq = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36]
# bq = [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35]
# if number in sq:
#     print('красный')
# elif number in bq:
#     print('черный')
# elif number == 0:
#     print('зеленый')
# else:
#     print('ошибка ввода')

# Решение 2:

# number = int(input('Введите число от 0 до 36: '))
# if number == 0:
#    print('Вы попали в зеленый карман')
# elif number == 1 or number == 3 or number == 5 or number == 7 or number == 9:
#    print('Вы попали в красный карман')
# elif number == 2 or number == 4 or number == 6 or number == 8 or number == 10:
#    print('Вы попали в черный карман')
# elif number == 11 or number == 13 or number == 15 or number == 17:
#    print('Вы попали в черный карман')
# elif number == 12 or number == 14 or number == 16 or number == 18:
#    print('Вы попали в красный карман')
# elif number == 19 or number == 21 or number == 23 or number == 25 or number == 27:
#    print('Вы попали в красный карман')
# elif number == 20 or number == 22 or number == 24 or number == 26 or number == 28:
#    print('Вы попали в черный карман')
# elif number == 29 or number == 31 or number == 33 or number == 35:
#    print('Вы попали в черный карман')
# elif number == 30 or number == 32 or number == 34 or number == 36:
#    print('Вы попали в красный камарн')
# else:
#    print('Вы ввели число вне диапазона от 0 до 36')

# - 10 - Создайте игру, которая просит пользователя ввести необходимое количество монет, чтобы получился ровно
#        один рубль. Программа должна предложить пользователю ввести количество монет достоинством 5, 1О и 50 копеек.
#        Если итоговое значение введенных монет равно одному рублю, то программа должна поздравить пользователя с
#        выигрышем. В противном случае программа должна вывести сообщение, говорящее о том, была ли введенная
#        сумма больше или меньше одного рубля.

# Решение 1:

# def main(kop_5, kop_10, kop_50, rub):
#
#     if kop_5 * 5 + kop_10 * 10 + kop_50 * 50 > rub:
#         return 'Сумма больше рубля !'
#     elif kop_5 * 5 + kop_10 * 10 + kop_50 * 50 < rub:
#         return 'Сумма меньше рубля !'
#     else:
#         return 'Получился рубль !'
#
#
# print(main(kop_5=int(input('Введите число монет достоинством 5 коп: ')),
#            kop_10=int(input('Введите число монет достоинством 10 коп: ')),
#            kop_50=int(input('Введите число монет достоинством 50 коп: ')),
#            rub=100))

# Решение 2:

# kop5 = int(input('Введите число монет достоинством 5 коп: '))
# kop10 = int(input('Введите число монет достоинством 10 коп: '))
# kop50 = int(input('Введите число монет достоинством 50 коп: '))
# summ = kop5 * 5 + kop10 * 10 + kop50 * 50
# rub = 100
# if summ > rub:
#    print('Вы ввели сумму больше рубля !')
# elif summ < rub:
#    print('Вы ввели сумму меньше рубля !')
# elif summ == rub:
#    print('Получился рубль !')

# - 11 - Прозорливая книготорговая фирма владеет книжным клубом, который присуждает своим клиентам очки, основываясь
#        на количестве книг, приобретенных ими ежемесячно. Очки присуждаются следующим образом:
#   • если клиент приобретает О книг, то зарабатывает О очков;
#   • если клиент приобретает 2 книги, то зарабатывает 5 очков;
#   • если клиент приобретает 4 книги, то зарабатывает 15 очков;
#   • если клиент приобретает 6 книг, то зарабатывает 30 очков;
#   • если клиент приобретает 8 книг или больше, то зарабатывает 60 очков.
#       Напишите программу, которая просит пользователя ввести количество книг, приобретенных им в этом месяце,
#       и затем выводит присужденное количество очков.

# Создать словарь согласно тарифной сетке магазина
# Определить пользовательский ввод
# Если введенного значения в словаре нету, показать ошибку, иначе показать баллы за книги.

# Решение 1:

# books = {'0': 'Вам присвоено 0 очков', '2': 'Вам присвоено 5 очков', '4': 'Вам присвоено 15 очков',
#          '6': 'Вам присвоено 30 очков', '8': 'Вам присвоено 60 очков'}
#
# buy_book = input('Какое кол-во книг вы купили в этом месяце ?: ')
# print(books[buy_book] if buy_book in books else 'Вы купили не достаточно, возьмите ещё =)')

# Решение 2:

# books = int(input('Введит кол-во книг купленных в этом месяце: '))
#
# if books == 0:
#    print('Вам присовенно 0 очков.')
# elif books == 2:
#    print('Вам присвоенно 5 очков.')
# elif books == 4:
#    print('Вам присвоенно 15 очков.')
# elif books == 6:
#    print('Вам присвоенно 30 очков.')
# elif books >= 8:
#    print('Вам присвоенно 60 очков.')
# else:
#    print('Вам нужно докупить ещё книг, чтобы заработать больше баллов.')

# - 12 - Компания-разработчик программного обеспечения продает программный пакет, который реализуется в
#        рознице за 99 долларов. Скидки за количество предоставляются в соответствии с табл. 3.9.
#      3.9: - ( Кол-во штук )     ( Скидка % )
#                 10-19               10
#                 20-49               20
#                 50-99               30
#                 100 и >             40
#       Напишите программу, которая просит пользователя ввести количество приобретенных пакетов. Программа должна
#       затем показать сумму скидки (если таковая имеется) и общую сумму покупки после вычета скидки.

# Решение :
# packets = int(input('Введите кол-во приобритенных пакетов: '))
# packets_1 = 99
# if packets < 10:
#    print('Сумма без скидки', packets * packets_1, 'рубль')
# elif packets >= 10 and packets <= 19:
#    print('Сумма скидки:', format(float((packets_1 * packets) * 0.10), ',.0f'), 'рублей')
#    print('Сумма к оплате с учетом скидки: ', float((packets_1 * packets) - (packets_1 * packets) * 0.10), 'рублей')
# elif packets >= 20 and packets <= 49:
#    print('Сумма скидки:', format(float((packets_1 * packets) * 0.20), ',.0f'), 'рублей')
#    print('Сумма к оплате с учетом скидки: ', float((packets_1 * packets) - (packets_1 * packets) * 0.20), 'рублей')
# elif packets >= 50 and packets <= 99:
#    print('Сумма скидки:', format(float((packets_1 * packets) * 0.30), ',.0f'), 'рублей')
#    print('Сумма к оплате с учетом скидки: ', float((packets_1 * packets) - (packets_1 * packets) * 0.30), 'рублей')
# elif packets >= 100:
#    print('Сумма скидки:', format(float((packets_1 * packets) * 0.40), ',.0f'), 'рублей')
#    print('Сумма к оплате с учетом скидки: ', float((packets_1 * packets) - (packets_1 * packets) * 0.40), 'рублей')

# - 13 - Грузовая компания срочной доставки взимает плату согласно ставкам, приведенным в табл. 3.10.

#        3.10: (Масса пакета, г )                               ( Ставка за 100 г,  рублей )
#              200 или меньше                                                150
#          Свыше 200, но не более 600                                        300
#          Свыше 600, но не более 1 ООО                                      400
#               Свыше 1000                                                   475

#       Напишите программу, которая просит пользователя ввести массу пакета и показывает плату за доставку.

# Решение:
# mass = int(input('Введите массу пакета в "граммах": '))
# if mass <= 200:
#    print('Сумма за массу пакета: ', format(float(((150 * 2) / 200) * mass), ',.0f'), 'рублей')
# elif mass > 200 and mass <= 600:
#    print('Сумма за массу пакета: ', format(float((300 * 2) / 200 * mass), ',.0f'), 'рублей')
# elif mass > 600 and mass <= 1000:
#    print('Сумма за массу пакета: ', format(float((400 * 6) / 600 * mass), ',.0f'), 'рублей')
# elif mass > 1000:
#    print('Сумма за массу пакета: ', format(float((475 * 10) / 1000 * mass), ',.0f'), 'рублей')

# - 14 - Напишите программу, которая вычисляет и показывает индекс  массы тела (ИМТ) человека. ИМТ часто
#        используется для определения, весит ли человек больше или меньше нормы для своего. ИМТ человека рассчитывают
#        по формуле:  [ ИМТ = масса / рост * рост].
#        Где масса измеряется в килограммах, а рост - в метрах. Программа должна попросить пользователя ввести массу
#        и рост и затем показать ИМТ пользователя. Программа также должна вывести сообщение, указывающее, имеет ли
#        человек оптимальную, недостаточную или избыточную массу. Масса человека считается оптимальной, если его ИМТ
#        находится между 18.5 и 25. Если ИМТ меньше 18.5, то считается, что человек весит ниже нормы.
#        Если значение ИМТ больше 25, то считается, что человек весит больше нормы.


# Решение 2:

# mass = float(input('Введите вашу массу в килограммах: '))
# height = float(input('Введите ваш рост в метрах: '))
# IMT = mass / (height * height)
# if IMT >= 18.5 and IMT <= 25:
#    print('Ваш IMT = ', format(IMT, ',.1f'), 'это считается нормой')
# elif IMT < 18.5:
#    print('Ваш IMT = ', format(IMT, ',.1f'), 'это меньше нормы')
# elif IMT > 25:
#    print('Ваш IMT = ', format(IMT, ',.1f'), 'это больше нормы')

# - 15 - Напишите программу, которая просит пользователя ввести количество секунд и работает следующим образом.
#   • В минуте 60 секунд. Если число введенных пользователем секунд больше или равно 60, то программа должна
#     преобразовать число секунд в минуты и секунды.
#   • В часе 3 600 секунд. Если число введенных пользователем секунд больше или равно
#     3 600, то программа должна преобразовать число секунд в часы, минуты и секунды.
#   • В дне 86 400 секунд. Если число введенных пользователем секунд больше или равно
#     86 400, то программа должна преобразовать число секунд в дни, часы, минуты и секунды.

# Решение :
# s = int(input('Enter seconds: '))
# if 60 <= s < 3600:
#     print(f'{s//60} min {s%60} sec')
# elif 3600 <= s < 86400:
#     print(f'{s//3600} hour {(s//60) % 60} min {s%60} sec')
# else:
#     print(f'{s//86400} days {((s - ((s // 86400) * 86400)) // 3600)} hour {(s//60)%60} min {s%60} sec')

# - 16 - Февраль обычно имеет 28 дней. Но в високосный год в феврале 29 дней.
#        Напишите программу, которая просит пользователя ввести год. Затем она должна показать  количество дней
#        в феврале в этом году. Для определения високосных лет используйте следующие критерии.

#   • Определить, делится ли год на 100. Если да, то этот год високосный тогда и только тогда, если он также делится
#       на 400. Например, 2000 является високосным годом, а 2100 нет.

#   • Если год не делится на 100, то этот год високосный тогда и только тогда, если он делится на 4.
#       Например, 2008 является високосным годом, но 2009 нет.

#       Вот пример выполнения этой программы:
#       Введите год: 2008 Enter:
#       В 2008 году в феврале 29 дней.

# Решение :
# year = int(input('Введите год: '))
# if year % 100 == 0 and year % 400 == 0:
#    print('В', year, 'году в феврале 29 дней')
# elif year % 100 != 0 and year % 4 == 0:
#    print('В', year, 'году в феврале 29 дней')
# else:
#    print('Не високосный год')

# - 17 - Диагностическое дерево проверки качества Wi-Fi. На рис. 3.19 приведена упрощенная блок-схема поиска причины
#        плохого Wi-Fi-соединения. Используйте ее для создания программы, которая проведет пользователя по шагам
#        исправления плохого Wi-Fi-соединения.
#   Вот пример вывода программы:
#        Перезагрузите компьютер и попробуйте подключиться.
#   Вы исправили проблему? нет 1 Enter 1
#        Перезагрузите маршрутизатор и попробуйте подключиться.
#   Вы исправили проблему? да 1 Enter 1
#        Обратите внимание, что программа завершается, как только решение проблемы найдено.
#   Вот еще один пример вывода программы:
#        Перезагрузите компьютер и попробуйте подключиться.
#   Вы исправили проблему? нет [Enter 1
#        Перезагрузите маршрутизатор и попробуйте подключитьс%я.
#   Вы исправили проблему? нет 1 Enter 1
#        Убедитесь, что кабели между маршрутизатором и модемом прочно подсоединены.
#   Вы исправили проблему? нет 1Enter1
#        Переместите маршрутизатор на новое место.
#   Вы исправили проблему? нет 1 Enter 1
#        Возьмите новый маршрутизатор.

# Решение :
# WiFi = input('Какая у вас проблема ?\n')
# print('Перезагрузите компьютер и попробуйте подключиться')
# x = input('Вы исправили проблему ? Да / Нет: ')
# if x == 'Да':
#    print('Finish')
# else:
#    print('Перезагрузите маршрутизатор и попробуйте подключиться')
# x = input('Вы исправили проблему ? Да / Нет: ')
# if x == 'Да':
#    print('Finish')
# else:
#    print('Убедитесь, что кабели между маршрутизатором и модемом прочно подсоединены')
# x = input('Вы исправили проблему ? Да / Нет: ')
# if x == 'Да':
#    print('Finish')
# else:
#    print('Переместите маршрутизатор на новое место')
# x = input('Вы исправили проблему ? Да / Нет: ')
# if x == 'Да':
#    print('Finish')
# else:
#    print('Возьмите новый маршрутизатор')

# - 18 - На вашу встречу выпускников собирается прибыть группа ваших друзей, и вы хотите их повести в местный
#        ресторан на ужин. Вы не уверены, что ваши друзья придерживаются диетических ограничений, но ваши варианты
#        выбора ресторана будут такими.
#   Изысканные гамбургеры от Джо - вегетарианская: нет, веганская (строгая вегетарианская): нет, безглютеновая: нет.
#   Центральная пиццерия - вегетарианская: да, веганская: нет, безглютеновая: да.
#   Кафе за углом - вегетарианская: да, веганская: да, безглютеновая: да.
#   Блюда от итальянской мамы - вегетарианская: да, веганская: нет, безглютеновая: нет.
#   Кухня шеф-повара - вегетарианская: да, веганская: да, безглютеновая: да.
#       Напишите программу, которая запрашивает, есть ли в группе вегетарианцы, веганцы либо приверженцы
#       безглютеновой диеты, после чего она выводит только те рестораны, в которые можно повести группу друзей.
#       Вот пример вывода программы:
#   Будет ли на ужине вегетарианец? да Enter
#   Будет ли на ужине веганец? нет Enter
#   Будет ли на ужине приверженец безглютеновой диеты? да Enter
#   Вот ваши варианты ресторанов:
#   Центральная пиццерия
#   Кафе за углом
#   Кухня шеф-повара

# Решение :
# vegan = input('Будет ли на ужине веганец?: ')
# vegat = input('Будет ли на ужине вегетарианец?: ')
# gluten = input('Будет ли на ужине приверженец безглютеновой диеты?: ')
# if vegan == 'No' and vegat == 'No' and gluten == 'No':
#    print('Вот ваши варианты ресторанов: Изысканные гамбургеры от Джо')
# elif vegan == 'No' and vegat == 'Yes' and gluten == 'Yes':
#    print('Вот ваши варианты ресторанов: \n Центральная пиццерия,\n Кафе за углом,\n Кухня шеф-повара')
# elif vegan == 'Yes' and vegat == 'Yes' and gluten == 'Yes':
#   print('Вот ваши варианты ресторанов: \nКафе за углом, \nКухня шеф-повара')

# a = 2
# b = 2
# print("A") if a > b else print("=") if a == b else print("B")
