# - 1 - Напишите фрагмент кода на Python, который предлагает пользователю ввести свой рост
#       и присваивает введенное пользователем значение переменной с именем height.
#       height = input('Введите свой рост: ')
#       print('Ваш рост равен:', height, 'сантиметра')

# - 2 - Напишите фрагмент кода Python, который предлагает пользователю ввести свой любимый
#       цвет и присваивает введенное пользователем значение переменной с именем color.
#       color = input('Введите ваш любимый цвет: ')
#       print('Вы любите', color, 'цвет')

# - 3 - Напишите инструкции присваивания, которые выполняют приведенные ниже операции
# с переменными а, Ь и с: а) прибавляет 2 к а и присваивает результат ь;
# б) умножает ь на 4 и присваивает результат а;
# в) делит а на 3.14 и присваивает результат ь;
# г) вычитает 8 из ь и присваивает результат а.
# a = 0
# b = a + 2
# print(b)
# b = 1
# a = b * 4
# print(a)
# a = 9
# b = a / 3.14
# print(b)
# b = 18
# a = b - 8
# print(a)

# - 4 - Допустим, что переменные w, х, у и z являются целочисленными и что w = 5, х = 4,
#       у = 8 и z = 2. Какое значение будет сохранено в результате после того, как все приведенные
#       ниже инструкции будут исполнены? #а) result = х + у; #б) result = z * 2  в) result у / х
#       г) result у - z д) result = w // z
# result = x + y = 12
# result = z * 2 = 4
# result = y / x = 2
# result = y - z = 6
# result = w // z = 2

# - 5 - Напишите инструкцию Python, которая присваивает сумму 10 и 14 переменной total.
# x = 10
# y = 14
# total = x + y
# print(total)

# - 6 - Напишите инструкцию Python, которая вычитает переменную down payment (предоплата)
#       из переменной total (итоговая сумма) и присваивает результат переменной due
#       (к оплате).
# total = 36000
# down_payment = 10000
# due = down_payment - total
# print(due)

# - 7 - Напишите инструкцию Python, которая умножает переменную suЬtotal (нарастающий
#       итог) на 0.15 и присваивает результат переменной total.
# subtotal = 10
# num1 = 0.15
# total = subtotal * num1
# print(total)

# - 8 - Что будет показано в результате исполнения приведенного ниже фрагмента кода?
# а = 5
# ь 2
# с = 3
# result = а + Ь * с
# print(result) = 11

# - 9 - Что будет показано в результате исполнения приведенного ниже фрагмента кода?
# num = 99
# num = 5
# print(num) = 5

# - 10 - Допустим, что переменная sales ссылается на вещественное значение. Напишите инструкцию,
#       которая показывает значение, округленное до двух десятичных знаков после
#       точки.
# sales = 10.2351
# print(format(sales, '.2f'))

# - 11 - Допустим, что была исполнена приведенная инструкция:  numЬer = 1234567.456
#        Напишите инструкцию Python, показывающую значение, на которое ссылается переменная
#        numЬer, отформатированное как: 1,234,567.5
# number = 1234567.456
# print(format(number, ',.1f'))

# - 12 - Что покажет приведенная ниже инструкция? print ('Джордж', 'Джон' , 'Пол', 'Ринго' , sep='@')
# - Покажет Джордж@Джон@Пол@Ринго

# - 13 - Напишите инструкцию черепашьей графики, которая чертит круг с радиусом 75 пикселов.
# turtle.circle(75)

# - 14 -  Напишите инструкции черепашьей графики, чтобы нарисовать квадрат со стороной
#       100 пикселов и заполненный синим цветом.
# import turtle
# turtle.begin_fill()
# turtle.fillcolor('blue')
# turtle.forward(100)
# turtle.left(90)
# turtle.forward(100)
# turtle.left(90)
# turtle.forward(100)
# turtle.left(90)
# turtle.forward(100)
# turtle.end_fill()
# turtle.showturtle()
# turtle.mainloop()

# - 15 -      Напишите инструкции черепашьей графики, чтобы нарисовать квадрат со стороной
#             100 пикселов и круг в центре квадрата. Радиус круга должен составить 80 пикселов.
#             Круг должен быть заполнен красным цветом. (Квадрат не должен быть заполнен цветом.)
# import turtle
# turtle.forward(100)
# turtle.left(90)
# turtle.forward(100)
# turtle.left(90)
# turtle.forward(100)
# turtle.left(90)
# turtle.forward(100)
# turtle.penup()
# turtle.goto(10, 50)
# turtle.begin_fill()
# turtle.fillcolor('red')
# turtle.pendown()
# turtle.circle(40)
# turtle.end_fill()
# turtle.showturtle()
# turtle.mainloop()
