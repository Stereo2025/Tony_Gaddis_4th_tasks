# - 1 - Напишите инструкцию if, которая присваивает значение 20 переменной у и значение 40
#       переменной z, если переменная х больше 100.

# Решение:
# x = float(input('Введите число: '))
# if x > 100:
#     y = 20
#     z = 40
#     print('y =', y, 'z =', z,)

# - 2 - Напишите инструкцию if, которая присваивает значение О переменной b и значение 1
#       переменной с, если переменная а меньше 1О.

# Решение:
# a = float(input('Введите число: '))
# if a < 10:
#     b = 0
#     c = 1
#     print('b = ', b, 'c = ', c)

# - 3 - Напишите инструкцию if-else, которая присваивает значение О переменной b, если
#       переменная а меньше 1О. В противном случае она должна присвоить переменной b значение 99.

# Решение:
# a = float(input('Введите число: '))
# if a < 10:
#     b = 0
#     print('b = ', 0)
# else:
#     b = 99
#     print('b = ', 99)

# - 4 - Приведенный ниже фрагмент кода содержит несколько вложенных инструкций if-else.  К сожалению, они были написаны
#       без надлежащего выравнивания и выделения отступом. Перепишите этот фрагмент и примените соответствующие правила
#       выравнивания и выделения отступом.

# Решение:
# score = float(input('Введите число: '))
# if score >= A_score:
#     print ('Ваш уровень - А.')
# else:
#     if score >= В_score:
#         print ('Ваш уровень - В. ')
#     else:
#         if score >= С_score:
#             print ('Ваш уровень - С. ' )
#         else:
#             if score >= D_score:
#                 print('Baш уровень - D.')
#             else:
#                 print ('Ваш уровень - F. ')

# - 5 - Напишите вложенные структуры принятия решения, которые выполняют следующее: если amount1 больше 10 и amount2
#       меньше 100, то показать большее значение из двух переменных amount1 и amount2.

# Решение :
# amount = float(input('Введите число: '))
# if amount > 10:
#    print('amount1 = ', amount)
# elif amount < 100:
#    print('amount2 = ', amount)

# - 6 - Напишите инструкцию if-else, которая выводит сообщение 'Скорость нормальная', если переменная speed находится
#   в диапазоне от 24 до 56. Если значение переменной speed лежит вне этого диапазона, то показать 'Скорость аварийная'.

# Решение :
# speed = float(input('Введите число: '))
# if speed >= 24 and speed <= 56:
#     print('Скорость нормальная')
# else:
#     print('Скорость аварийная')

# - 7 - Напишите инструкцию if-else, которая определяет, находится ли переменная points вне диапазона от 9 до 51.
#       Если значение переменной лежит вне этого диапазона, то она должна вывести сообщение ' Недопустимые точки' .
#       В противном случае она должна показать сообщение 'Допустимые точки' .

# Решение :
# points = float(input('Введите число: '))
# if points <= 9 or points >= 51:
#     print('Недопустимые точки')
# else:
#     print('Допустимые точки')

# - 8 - Напишите инструкцию if, которая применяет библиотеку черепашьей графики, чтобы определить, находится ли угловое
#       направление черепахи в диапазоне от О до 45° (включая О и 45). Если это так, то поднимите перо черепахи.

# Решение :
# import turtle
# if turtle.heading() >= 0 and turtle.heading() <=45:
#     turtle.penup()
# turtle.showturtle()
# turtle.mainloop()

# - 9 - Напишите инструкцию if, которая применяет библиотеку черепашьей графики, чтобы определить, является ли цвет
#       пера черепахи красным или синим. Если это так, то установите размер пера 5 пикселов.

# Решение :
# import turtle
# if turtle.pencolor() == 'red' or turtle.pencolor() == 'blue':
#     turtle.pensize(5)
# turtle.showturtle()
# turtle.mainloop()

# - 10 - Напишите инструкцию if, которая применяет библиотеку черепашьей графики, чтобы определить, находится ли
#        черепаха в прямоугольнике. Левый верхний угол прямоугольника находится в позиции (100, 100), а его правый
#        нижний угол - в позиции (200, 200).  Если черепаха в прямоугольнике, то спрячьте черепаху.

# Решение :
# import turtle
# turtle.bgcolor('gray')
# turtle.penup()
# turtle.goto(100, 100)
# turtle.pendown()
# turtle.forward(100)
# turtle.setheading(90)
# turtle.forward(100)
# turtle.setheading(180)
# turtle.forward(100)
# turtle.setheading(270)
# turtle.forward(100)
# turtle.penup()
# turtle.goto(0, 0)
# turtle.goto(150, 150)
# if (turtle.xcor() >= 100 and turtle.ycor() >= 100 and
#     turtle.xcor() <= 200 and turtle.ycor() <= 200):
#     turtle.hideturtle()
# turtle.mainloop()

